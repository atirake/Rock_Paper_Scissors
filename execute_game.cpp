#include <iostream>
#include <vector>
#include "choice_mapping.h"

using namespace std;

/**
 * @brief play the game for the number of rounds inputted.
 *
 * This function determines the winner for each round based on input,
 * and outputs the winner name with reason,
 * finally displaying the overall score for player and Computer.
 *
 * @param choiceUser vector<string> list of strings inputted by user.
 * @param choiceSystem vector<int> list of random ints generated by Computer.
 */
void game_play(const vector<string>& choiceUser, const vector<int>& choiceSystem) {
    cout << endl << "Game Start!\n";
    int round = 1, user_score = 0, system_score = 0;

    // play the game for each round as in choiceUser
    for (int i = 2; i < choiceUser.size(); i++) {
        cout << "Round " << round << " : ";
        switch (stoi(choiceUser[i])) {
            case 1:
            case 2:
            case 3:
                std::cout << "The computer chose ";

                // Determine Rock, Paper or Scissors from choice mappings based on choiceSystem for this round
                for (auto entry: Choices) {
                    if (stoi(entry.second) == choiceSystem[round - 1]) {
                        std::cout << entry.first << ", ";
                    }
                }

                // Determine Rock, Paper or Scissors from choice mappings based on choiceUser for this round
                for (auto entry: Choices) {
                    if (stoi(entry.second) == stoi(choiceUser[i])) {
                        std::cout << choiceUser[0] << " chose "<< entry.first << ". ";
                    }
                }

                // Determine and display the winner for this round
                switch (choiceSystem[round - 1]) {
                    case 1:
                        switch (stoi(choiceUser[i])) {
                            case 1:
                                std::cout << "It's a draw.";
                                break;
                            case 2:
                                std::cout << "Paper covers Rock. Winner: " << choiceUser[0];
                                ++user_score;
                                break;
                            case 3:
                                std::cout<< "Rock smashes Scissors. Winner: Computer.";
                                ++system_score;
                                break;
                        }
                        break;
                    case 2:
                        switch (stoi(choiceUser[i])) {
                            case 1:
                                std::cout << "Paper covers Rock. Winner: Computer.";
                                ++system_score;
                                break;
                            case 2:
                                std::cout << "It's a draw." ;
                                break;
                            case 3:
                                std::cout<< "Scissors cutting Paper. Winner: " << choiceUser[0];
                                ++user_score;
                                break;
                        }
                        break;
                    case 3:
                        switch (stoi(choiceUser[i])) {
                            case 1:
                                std::cout << "Rock smashes Scissors. Winner: " << choiceUser[0];
                                ++user_score;
                                break;
                            case 2:
                                std::cout << "Scissors cutting Paper. Winner: Computer." ;
                                ++system_score;
                                break;
                            case 3:
                                std::cout<< "It's a draw.";
                                break;
                        }
                        break;
                }   
                cout << endl;  
                break;
            default:
                std::cout << "Invalid move. Please enter Rock, Paper, or Scissors.\n";
                break;        
        }    
        ++round;
    }
    cout << endl << "Game Over!" << endl;

    // Display the total score each for player and Computer
    cout << "Total Score - " << choiceUser[0] << ": " << user_score << ", Computer: " << system_score << endl;
}